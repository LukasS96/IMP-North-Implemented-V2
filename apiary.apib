FORMAT: 1A

HOST: https://muc-staging-v2.jelastic.dogado.eu

# IMP North. Implemented. V2
This apiary project describes the API version V2 of SiMobility Connect. 

Host V2: https://muc-staging-v2.jelastic.dogado.eu

Host V1: https://muc-staging-imp.jelastic.dogado.eu

cml host: http://cml-staging.jelastic.dogado.eu (only IMR is working)

# Readme before making any changes   

Please keep the Groovy generating script in synch with this documentation. Read more on Wiki: https://confluence.imp.mobilitaetsdienste.de/display/IMP/Apiary. 

* *Update the Groovy script if you change names of any chapter.* 
* *Chapter names must not contain special characters "(", ")", "\", etc. which have a meaning in regular expressions.*

# Introduction

This is the description of version V2 of the public REST interface of the platform SiMobility Connect offered by Siemens AG. A mockup of this interface can be tried using the URLs listed on the right. 
In order to avoid redundancies, this project contains only interfaces that were changed since version V1. The V1 interface is decribed in http://docs.imp.apiary.io/.

A mockup of this interface can be tried using the URLs listed on the right. For access to the production
system please write an email to `henrik.koberg@siemens.com`

Usually clients will be authorized by certificates. If that is not possible, Basic Authentication may be used as a fallback.

(c) Siemens AG 2014 All rights reserved

# Group Bike Sharing
This is a group of all bike sharing related REST resources.
    
## Bike Sharing Stations [/imp-endpoint/api/V2/Resources/BikeSharing/Stations?lat={lat}&lng={lng}&radius={radius}&filter={filter}]    
This collection contains a list of all bike sharing stations in an area of interest specified by query parameters.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})
* an (optional) full text filter (filter={filter})

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format for, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The data structure of the response contains the following attributes: 

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | Available actions
id | Number | Internal bike sharing station identification number
description | String | Approximate location
type | String | Type of bike sharing station
uri | URI | URI to request more details.
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Resource operator
phoneNo | String | 
operatorURI | String |
operatorName | String | Resource operator
address | Object | 
numberOfBikes | Number | Number of bikes or storing positions
numberOfFreeBikes | Number | Number of currently available bikes
services | Array | 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request.

Parts of the data structure might be omitted if the information is not available. 
    
### Getting bikes [GET]
@testable

+ Parameters
    + lat (number, `52.52`) ... latitude value. Has example value.
    + lng (number, `13.39`) ... longitude value. Has example value.
    + radius (number, `500`) ... radius in meter. Has example value.
    + filter (optional, number, `Berlin`) ... free text filter value. Multiple strings are combined by or. Examples `Berlin`, {`Berlin`}, {`Berlin` ´Mitte`}
    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)

        {
            "metaData": [
                {
                    "serviceAlias": "callabike",
                    "lastUpdateTime": "2014-07-10T14:23:11+02:00",
                    "messages": []
                },
                {
                    "serviceAlias": "nextbike",
                    "lastUpdateTime": "2014-07-10T14:11:02+02:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "book",
                            "method": "POST",
                            "uri": "Resources/BikeSharing/Stations/220/Process?action=book"
                        }
                    ],
                    "id": 220,
                    "description": "S. + U.-Bahnhof/ Friedrichstr.",
                    "type": "BikeSharingStation",
                    "uri": "Resources/BikeSharing/Stations/220",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.3881497383118,
                            52.5203730427629
                        ]
                    },
                    "provider": "nextbike",
                    "availability": 0,
                    "operator": "NextBike",
                    "phoneNo": null,
                    "operatorURI": null,
                    "operatorName": "NextBike",
                    "address": {
                        "citycode": null,
                        "city": "Berlin",
                        "street": null,
                        "houseno": null,
                        "district": null,
                        "region": null,
                        "country": null
                    },
                    "numberOfBikes": null,
                    "numberOfFreeBikes": 0,
                    "services": null
                },
                {
                    "actions": [
                        {
                            "name": "book",
                            "method": "POST",
                            "uri": "Resources/BikeSharing/Stations/210/Process?action=book"
                        }
                    ],
                    "id": 210,
                    "description": "S+U-Bhf. Friedrichstraße",
                    "type": "BikeSharingStation",
                    "uri": "Resources/BikeSharing/Stations/210",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.385995864868164,
                            52.519676208496094
                        ]
                    },
                    "provider": "callabike",
                    "availability": 81,
                    "operator": "CallABike",
                    "phoneNo": null,
                    "operatorURI": null,
                    "operatorName": "CallABike",
                    "address": null,
                    "numberOfBikes": 16,
                    "numberOfFreeBikes": 13,
                    "services": null
                }
            ]
        }

# Group Parking
This is a group of all parking related REST resources including Parking Garages and On-street Parking Vacancies.
    
## Parking Garages with Basic Info [/imp-endpoint/api/V2/Resources/Parking/Garages?lat={lat}&lng={lng}&radius={radius}&f_garages={categoryJson}&filter={filter}]
This collection contains a list of all parking garages in an area of interest specified by query parameters together with an URI to acquire more details. Parking garages can be filtered by category.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})


The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource (book, cancel, etc.)
id | Number | Internal parking garage identification number
description | String | Approximate location
type | String | (="ParkingGarage")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider (usually equals operator)
availability | Double | Availability in percentage
operator | String | Parking space operator (usually equals provider)
totalnumber | Object | Number of lots for different categories { "handicappedOnly":Int, "womenOnly":Int, "others":Int }
lottype | Enum | Type of garage {"Parking garage", "Parking zone", "Underground car park", "Parking lot"} 
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request. 

Parts of the data structure might be omitted if the information is not available. 
    
### Getting parking garages [GET]
@testable

+ Parameters
    + lat (optional, number, `52.52`) ... latitude value. Has example value.
    + lng (optional, number, `13.39`) ... longitude value. Has example value.
    + radius (optional, number, `10000`) ... radius in meter. Has example value.
    + categoryJson (optional, string, `{"category":["P+R"]}`) ... String `categoryJson` category json data, containing a list of possible category values combined by OR. Example value `{"category":["P%2BR"]}` or `{"category":["P"]}`, P%2BR stands for P+R
    + filter (optional, string, `Parking`) ... filter value. Has example value.

    
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "vmzParking",
                    "lastUpdateTime": "2014-12-16T10:14:46+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "city2eParking",
                    "lastUpdateTime": "2014-12-16T10:35:46+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "parkUParking",
                    "lastUpdateTime": "2014-12-16T10:35:46+01:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/50368/Process?action=consume"
                        }
                    ],
                    "id": 50368,
                    "description": "P+R Alt-Mariendorf (U)",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/50368",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.3900337219238,
                            52.439266204834
                        ]
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "PR",
                    "totalnumber": {
                        "others": 125,
                        "handicappedOnly": null,
                        "womenOnly": null
                    },
                    "lottype": null
                },
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/50050/Process?action=consume"
                        }
                    ],
                    "id": 50050,
                    "description": "P+R Tempelhof (S + U)",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/50050",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.3851003646851,
                            52.4693984985352
                        ]
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "PR",
                    "totalnumber": {
                        "others": 70,
                        "handicappedOnly": null,
                        "womenOnly": null
                    },
                    "lottype": null
                },
                {
                    "actions": [
                        {
                            "name": "consume",
                            "method": "POST",
                            "uri": "Resources/Parking/Garages/50399/Process?action=consume"
                        }
                    ],
                    "id": 50399,
                    "description": "P+R Heidelberger Platz (S + U)",
                    "type": "ParkingGarage",
                    "uri": "Resources/Parking/Garages/50399",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.3121109008789,
                            52.4807777404785
                        ]
                    },
                    "provider": "vmzParking",
                    "availability": null,
                    "operator": "PR",
                    "totalnumber": {
                        "others": 140,
                        "handicappedOnly": null,
                        "womenOnly": null
                    },
                    "lottype": null
                }
            ]
        }


## Parking Garage with Detailed Info [/imp-endpoint/api/V2/Resources/Parking/Garages/{id}]

A single parking garage object with Detailed Information. 
The data structure of the response contains the attributes with the basic information and additionally the following attributes:

attribute | json data type | comments
--- | --- | ---
... | ... | ...
address | Object | Address {"citycode": String, "city": String, "street": String, "houseno": String }
pricing | String | Price structure 
payment | Array | Payment options {COINPAY, BANKNOTEPAY, BANKCARDPAY, CREDICARDPAY, PREPAIDCARDPAY, PAYCARDPAY, DEBITPAY}
category | Enum | P - parking, P+R park and ride, etc. { "P+R","B+R", "P", ... } 
openingHours | String | Opening hours
bookable | Boolean |  
heightLimit | Object | Height limit { "value": Number, "unit": String } 
occupancyRate | Number | Occupancy rate in percent (real time data) 
allowedStay | Object | Allowed stay { "value": Number, "unit": String } 
generalInformations | String |
restrictions | Array | Usage restrictions {"VisitorsOnly","GuestsOnly"}
services | Array | Special services { "WomenParking", "DisabledParking", "Monitored", "ChargingStation", "ParentChild", "MotorCycle", ... } 
securityComment | String |  Security features
entrance | String |

### Getting a specific garage [GET] 
@nottestable

+ Parameters
    + id (string, `878`) ... String `id` as retrieved through *[/imp-endpoint/api/V2/Resources/Parking/Garages?lat={lat}&lng={lng}&radius={radius}]* or similar.
        
+ Response 200 (application/json)

    + Body
    
            {
                "actions": [
                    {
                        "name": "consume",
                        "method": "POST",
                        "uri": "Resources/Parking/Garages/878/Process?action=consume"
                    }
                ],
                "id": 878,
                "description": "Mitte, An der Friedrichswerderschen Kirche",
                "type": "ParkingGarageDetails",
                "uri": "Resources/Parking/Garages/878",
                "location": {
                    "type": "Point",
                        "coordinates": [
                            13.39694,
                            52.515930000000004
                        ]
                },
                "provider": "vmzParking",
                "availability": null,
                "operator": "P",
                "totalnumber": {
                    "others": 75,
                    "handicappedOnly": 0,
                    "womenOnly": 0
                },
                "lottype": "Parking lot",
                "address": {
                    "citycode": "10117",
                    "city": "Berlin",
                    "street": "Oberwallstr.",
                    "houseno": null,
                    "district": null,
                    "region": null,
                    "country": null
                },
                "pricing": "EUR 0,25 pro 15 min.<br>Mo-Fr von 19 - 9 Uhr: kostenlos<br>Sa von 14 - 9 Uhr: kostenlos<br>So: kostenlos",
                "payment": [
                    "COINPAY"
                ],
                "category": [
                    "P"
                ],
                "openingHours": null,
                "bookable": false,
                "heightLimit": null,
                "occupancyRate": null,
                "allowedStay": null,
                "generalInformations": null,
                "restrictions": null,
                "services": null,
                "securityComment": null,
                "entrance": null
            }

## OnStreet Parking Spaces [/imp-endpoint/api/V2/Resources/Parking/OnStreetSpaces?lat={lat}&lng={lng}&radius={radius}&f_onStreetSpaces={sizeJson}&filter={textFilter}]
This collection contains a list of OnStreet parking spaces for specified size in an area of interest specified by query parameters together with an URI to acquire more details. OnStreet parking spaces can be filtered by the space size (Small, Medium or Large).
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The data structure of the response contains the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
actions | Array | List of available actions on this resource (currently no actions available)
id | Number | Internal OnStreet parking space identification number
description | String | Approximate location
type | String | (="ParkingOnStreetSpace")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Parking service provider (usually equals operator)
availability | Double | Availability in percentage
operator | String | Parking space operator (usually equals provider)
size | Enum | Size of OnStreet parking space {"Large", "Medium", "Small", "Unknown"} 
accessibility | Enum | Accessibility of OnStreet parking space {"Private","Public","SemiPublic","Unknown"}
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request. 

Parts of the data structure might be omitted if the information is not available. 

### Getting OnStreet parking [GET]
@testable

+ Parameters
    + lat (optional, number, `48.13`) ... latitude value. Has example value.
    + lng (optional, number, `11.59`) ... longitude value. Has example value.
    + radius (optional, number, `5000`) ... radius in meter. Has example value.
    + sizeJson (optional, string, `{"size":"Medium"}`) ... String `sizeJson` size json data. Example value `{"size":"Large"}` or `{"size":"Medium"}`
    + filter (optional, number, `Medium`) ... textFilter value. Has example value.
+ Request

    + Headers

            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 

+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "vmzParking",
                    "lastUpdateTime": "2014-12-02T15:59:01+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "city2eParking",
                    "lastUpdateTime": "2014-12-02T16:27:45+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "parkUParking",
                    "lastUpdateTime": "2014-12-02T16:27:50+01:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [],
                    "id": 239,
                    "description": "Einemstraße",
                    "type": "ParkingOnStreetSpace",
                    "uri": "Resources/Parking/OnStreetSpaces/239",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.352953,
                            52.502795
                        ]
                    },
                    "provider": "parkUParking",
                    "availability": 100,
                    "operator": "ParkU",
                    "size": "Large",
                    "accessibility": null
                }
            ]
        }

## OnStreet Space with Detailed Info [/imp-endpoint/api/V2/Resources/Parking/OnStreetSpaces/{id}]

A single OnStreet Space object with Detailed Information. 
The data structure of the response contains the attributes with the basic information and additionally the following attributes:

attribute | json data type | comments
--- | --- | ---
... | ... | ...
address | Object | Address {"citycode": String, "city": String, "street": String, "houseno": String }
barrier | boolean | Entry/exit barrier 
indoor | boolean | covered parking
patio | String | 
barrierFree | boolean | Barrier-free accessible
category | Array | List of enums describing features
usage | String | Description how to enter or use the parking space

### Getting a specific OnStreet Space [GET] 
@nottestable

+ Parameters
    + id (string, `907`) ... String `id` as retrieved through *[/imp-endpoint/api/V2/Resources/Parking/OnStreetSpaces?lat={lat}&lng={lng}&radius={radius}]* or similar.
        
+ Response 200 (application/json)

    + Body
    
            {
                "actions": [],
                "id": 907,
                "description": "Kleine Rosenthaler Str.",
                "type": "ParkingOnStreetSpaceDetails",
                "uri": "Resources/Parking/OnStreetSpaces/907",
                "location": {
                    "type": "Point",
                        "coordinates": [
                            13.403188,
                            52.528512
                        ]
                },
                "provider": "parkUParking",
                "availability": 100,
                "operator": "ParkU",
                "size": "Large",
                "accessibility": null,
                "address": {
                    "citycode": "10119",
                    "city": "Berlin",
                    "street": "Kleine Rosenthaler Str.",
                    "houseno": "12",
                    "district": null,
                    "region": null,
                    "country": "DE"
                },
                "barrier": true,
                "indoor": true,
                "patio": null,
                "barrierFree": true,
                "category": [
                    "attribute/available/true",
                    "attribute/traffic/sharingOperator/ParkU",
                    "point/traffic/parking/p/dynamic"
                ],
                "usage": "Tiefgarage Hotel  AMANO, kameraüberwacht, freie Platzwahl, Ausfahrt Rosenthaler Straße (QR-Code auf Rezeptionsklingel); zum Öffnen der Tore benötigen Sie die parku-App.\r\n\r\n5 Minuten zum Hackeschen Markt oder Rosenthaler Platz."
            }
            
        
## All Parking Garages or OnStreet parking spaces or both [/imp-endpoint/api/V2/Resources/Parking/All?f_onStreetSpaces={sizeJson}&f_garages={categoryJson}&filter={textFilter}]    
This collection contains a list of all parking garages or OnStreet parking spaces or both in an area of interest. The parking possibilities can be filtered by garage category (viz. P+R or P) or space size (Small, Medium or Large).

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time.
Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

The response contains attributes from parking garages or OnStreet parking spaces or both.

Parts of the data structure might be omitted if the information is not available. 
    
### Getting all parking garages or OnStreet parking spaces or both with specified size and category [GET]
@testable

+ Parameters
    + sizeJson (optional, string, `{"size":"Large"}`) ... String `sizeJson` size json data. Example value `{"size":"Large"}` or `{"size":"Medium"}`or `{"size":"Small"}
    + categoryJson (optional, string, `{"category": ["P%2BR"]}`) ... String `categoryJson` category json data. Example value `{"category" : ["P%2BR"]}` or `{"category": ["P"]}`
    + filter (optional, number, `Medium`) ... textFilter value. Has example value.
+ Request

    + Headers
    
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT 
        
+ Response 200 (application/json)   

        {
            "metaData": [
                {
                    "serviceAlias": "vmzParking",
                    "lastUpdateTime": "2014-11-20T12:55:14+01:00",
                    "messages": []
                                    },
                {
                    "serviceAlias": "city2eParking",
                    "lastUpdateTime": "2014-11-20T13:22:50+01:00",
                    "messages": []
                },
                {
                    "serviceAlias": "parkUParking",
                    "lastUpdateTime": "2014-11-20T13:22:54+01:00",
                    "messages": []
                }
            ],
            "resources": [
                {
                    "actions": [],
                    "id": 2838,
                    "description": "Lohmeyerstraße",
                    "type": "OnStreetSpaces",
                    "uri": "Resources/Parking/OnStreetSpaces/2838",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.301087,
                            52.517519
                        ]
                    },
                    "provider": "parkUParking",
                    "availability": 100,
                    "operator": "ParkU"
                },
                {
                    "actions": [],
                    "id": 239,
                    "description": "Einemstraße",
                    "type": "OnStreetSpaces",
                    "uri": "Resources/Parking/OnStreetSpaces/239",
                    "location": {
                        "type": "Point",
                        "coordinates": [
                            13.352953,
                            52.502795
                        ]
                    },
                    "provider": "parkUParking",
                    "availability": 100,
                    "operator": "ParkU"
                }
            ]
        }

# Group Journey Planner. IMR
This is a group of all IMR journey planner related REST resources.

## List of Trip Proposals with Basic Info. Intermodal Router [/imp-endpoint/api/V2/TripProposals/IMR] 

This collection contains a list of trip proposals with basic information for specified trip criteria. Note: The trip proposals can be multimodal or intermodal, depending on which routing service the mobility provider of the user is subscribed to.

The data structure of collection contains a list of trip proposals. Each trip proposal contains the following attributes:

attribute | json data type | comments
--- | --- | ---
url | URI | URI to request more details
origin | Object | Start point of the proposed trip
destination | Object | Endpoint of the proposed trip
trafficTypes | Array | List of traffic types used in the proposed trip. Possible values: Bike, Bus, Car, CityTrain, Ferry, Metro, Other, RegioTrain, Unknown, Train, Tram, Walk, UBahn. The trafficType Other is used in the segments for the start/stop procedures of car rental/parking.
description | String | Description of the trip proposal
costs | Array | List of costs for the proposed trip including distance, duration, price, CO2 emmision and ticket price for public transport.

    
+ Model (application/json)

    + Body
    
            {
                  "metaData": [
                    {
                      "serviceAlias": "vmzImrRouting",
                      "lastUpdateTime": "2014-12-23T12:35:43+00:00",
                      "messages": []
                    }
                  ],
                  "tripProposals": [
                    {
                      "url": "TripProposals/IMR/11873",
                      "origin": {
                        "location": {
                          "type": "Point",
                          "coordinates": [
                            13.4113422,
                            52.5218455
                          ]
                        },
                        "address": "Dircksenstraße, 10178 Berlin, Germany",
                        "time": "2013-07-23T13:10:00+00:00"
                      },
                      "destination": {
                        "location": {
                          "type": "Point",
                          "coordinates": [
                            13.3194514,
                            52.5635387
                          ]
                        },
                        "address": "Meteorstraße 40, 13405 Berlin, Germany",
                        "time": "2013-07-23T13:43:26+00:00"
                      },
                      "trafficTypes": [
                        "OwnBike"
                      ],
                      "description": null,
                      "costs": {
                        "distance": {
                          "unit": "meter",
                          "value": 8929
                        },
                        "duration": {
                          "unit": "minute",
                          "value": 33.43333333333333
                        },
                        "price": {
                          "unit": "Euro",
                          "value": 0
                        },
                        "emission": {
                          "unit": "gram",
                          "value": 0
                        },
                        "ticketPrice": null
                      }
                    },
                    {
                      "url": "TripProposals/IMR/11874",
                      "origin": {
                        "location": {
                          "type": "Point",
                          "coordinates": [
                            13.4113422,
                            52.5218455
                          ]
                        },
                        "address": "Dircksenstraße, 10178 Berlin, Germany",
                        "time": "2013-07-23T13:10:00+00:00"
                      },
                      "destination": {
                        "location": {
                          "type": "Point",
                          "coordinates": [
                            13.3194514,
                            52.5635387
                          ]
                        },
                        "address": "Meteorstraße 40, 13405 Berlin, Germany",
                        "time": "2013-07-23T15:17:54+00:00"
                      },
                      "trafficTypes": [
                        "Other",
                        "BikeSharing",
                        "Walk"
                      ],
                      "description": null,
                      "costs": {
                        "distance": {
                          "unit": "meter",
                          "value": 10264
                        },
                        "duration": {
                          "unit": "minute",
                          "value": 127.9
                        },
                        "price": {
                          "unit": "Euro",
                          "value": 0.024444444444444442
                        },
                        "emission": {
                          "unit": "gram",
                          "value": 0
                        },
                        "ticketPrice": null
                      }
                    }
                ]
            }


### Getting Trip Proposals by IMR Planner  [POST]
@testable

Selection criteria for trip proposals is specified in the request body as described in the sample request with the following attributes:

attribute | json data type | comments
--- | --- | ---
origin | Object | Start point specified by a geo location. Addresses can be converted into geo locations by means of "GET /Resources/GeoLocations".
destination | Object | End point specified by a geo location.
time | String | Date and time of the trip. If no time is specified, the current time is used as departure time.
departureTime | Boolean | Specifies whether the time is used as departure or arrival time
viapoints | Array of Objects | List of geolocations the route should pass in the given sequence
costFunctions | Array of Objects | List of cost factors, (such as Distance, Duration, Price, Emission), each with a percentaged weight. Sample cost function: {"costType":"Duration","percentage":"100"}
userId | String | Traveler id that requests a trip. Note: Currently it is not used by IMP and can be any string.
trafficTypes | Array | List of traffic types which should be included into trip proposal calculation. Currently possible: Bike, Bus, Car, CityTrain, Ferry, Metro, RegioTrain, Unknown, Train, Tram, Walk, UBahn. 
routingConstraints | Array of Objects | List of constraints to be taken into account for various traffic types, specified by min/max values. E.g. maximal distance in meters the traveler agrees to walk: {"routingConstraintType": "Distance", "trafficType": "Walk", "min": { "value": 0,"unit": "meter" }, "max":{"value":600, "unit":"meter"}}
ownVehicles | Array of Objects | List of own vehicles which may be included in trip proposal calculation. Sample object value {"trafficType":"Car", "useParking":true,"useParkAndRide":false, "location":{"type": "Point", "coordinates": [13.064472900000055, 52.3905689]}}
useBikeSharing | Boolean | Use bike sharing services for routing [default: false]
useCarSharing | Boolean | Use car sharing services for routing [default: false]
maxRoutingResponses | Number | Number of to be provided route alternatives
numOfTravelers | Number | Number of fellow travelers
numOfLuggage | Number | Number of luggage pieces
useTrafficSituation | Boolean | If set to true, the current traffic situation will be considered in the route calculation

Usually a subscribed route planning service does not support all of the above parameters. In many cases that is indicated by warnings in the metaData section of the response.

Notes:
- IMR also provides routes in the past, but not for public transport
- The IMR takes into account information about current traffic situation (traffic jams/road works/...) for route calculation.
- Traveling time costs for proposed journeys include the following extra times: 2 minutes set-up time and 1 minute return time for free-floating car sharing and bike sharing; 2 minutes set-up time and 0 minutes return time for station-based car and bike sharing, 5 minutes parking time for free-floating car sharing and own car.




+ Request

    + Headers
    
            Content-Type: application/json
            Accept: application/json

    + Body
        
            {
              "origin": {
                "location": {"type": "Point", "coordinates": [ 13.41100700000004, 52.521642 ]}
              },
              "destination": {
                "location": {"type": "Point", "coordinates": [ 13.319420000000036, 52.56347100000001 ]}
              },
              "time": "2013-07-23T15:10:00+02:00",
              "departureTime":"true",
              "costFunctions": [
                {
                  "costType": "Price",
                  "percentage": 100
                }
              ],
              "userId": "4711/10",
              "trafficTypes": ["Walk","Bike","Car","Metro","CityTrain","Bus"],
              "routingConstraints": [],
              "ownVehicles": [
                {
                    "trafficType": "Car",
                    "location": {"type": "Point", "coordinates": [ 13.41100700000004, 52.521642 ]},
                    "useParking": "false",
                    "useParkAndRide": "true",
                    "cost":{"price":{"price":{"value": 2, "currency":"Euro"},"distance":{"value":1, "unit":"kilometer"}}, "emission":{"mass":{"value": 2, "unit":"gram"},"distance":{"value":1, "unit":"kilometer"}}}
                },
                {
                    "trafficType": "Bike",
                    "location": {"type": "Point", "coordinates": [ 13.41100700000004, 52.521642 ]}
                } 
              ],
              "maxRoutingResponses": 4,
              "numOfTravelers" : 2,
              "numOfLuggage" : 2,
              "useTrafficSituation" : true
            }

+ Response 200

    [List of Trip Proposals with Basic Info. Intermodal Router][]


## Trip Proposal with Detailed Info [/imp-endpoint/api/V2/TripProposals/IMR/{proposalId}]

A single trip proposal object with Detailed Information. 
Each trip proposal consists of several segments, one segment for one transportation modality such as bike, car, train, etc. 
There are also separate segments if the traveler shall use different lines of the same transport modality, 
for instance, first U5 from A to B and then U4 from B to C. Each segment has an origin and a destination with corresponding timestamps when to arrive and depart.
A segment consists of a sequence of wayPoints and guidingPoints.
A wayPoint describes an intermediate geo location useful for displaying the trip proposal in a map.
A guidingPoint contain turn-by-turn instructions. It gives a traveler hints how to travel, e.g. whenever to change the road at a crossing. GuidingPoints are a subset of wayPoints.

The data structure of the trip proposal with detailed info contains the following attributes:

attribute | json data type | comments
--- | --- | ---
url | URI | URI to request more details
segments | Array of Objects | List of route segments
--- | --- | ---
segmentId | Number | Index of segment
description | String | Description of the segment
origin | Object | Start point of the segment. 
destination | Object | End point of the segment
trafficType | Enum | Traffic type used in the segment. Possible values: Bike, Bus, Car, CityTrain, Ferry, Metro, Other, RegioTrain, Unknown, Train, Tram, Walk, UBahn. The trafficType Other is used in the segments for the start/stop procedures of car rental/parking.
cost | Object | Costs of the segment including distance, duration, price and CO2 emmision.
wayPoints | Object | List of way points to render the segment
guidingPoints | Object | List of guiding points with turn-by-turn instructions

For a car or bike sharing segment we have in addition "operatorId" and "unitId" and for CityTrain/RegioTrain segment we have "platform", "stationId" and "direction".

Note: The trip proposals as returned by *[GET /imp-endpoint/api/V2/TripProposals/IMR]* are internally stored only for a certain time; afterward they expire and details are no longer available. The current expiration time is 10 minutes.

### Getting a specific Trip Proposal [GET] 
@nottestable

+ Parameters
    + proposalId (string, `43`) ... String `proposalId` as retrieved through *[GET /imp-endpoint/api/V2/TripProposals/IMR]*

        
+ Response 200 (application/json)

            {
                "url": "TripProposals/IMR/43/",
                "segments": [
                    {
                        "segmentId": "1",
                        "description": null,
                        "origin": {
                            "location": {
                                "type": "Point",
                                "coordinates": [
                                    13.4113422,
                                    52.5218455
                                ]
                            },
                            "address": "Dircksenstraße, 10178 Berlin, Germany",
                            "time": "2013-07-23T13:10:00+00:00"
                        },
                        "destination": {
                            "location": {
                                "type": "Point",
                                "coordinates": [
                                    13.3194514,
                                    52.5635387
                                ]
                            },
                            "address": "Meteorstraße 40, 13405 Berlin, Germany",
                            "time": "2013-07-23T13:43:26+00:00"
                        },
                        "trafficType": "OwnBike",
                        "cost": {
                            "distance": {
                                "unit": "meter",
                                "value": 8929
                            },
                            "duration": {
                                "unit": "minute",
                                "value": 33.43333333333333
                            },
                            "price": {
                                "unit": "Euro",
                                "value": 0
                            },
                            "emission": {
                                "unit": "gram",
                                "value": 0
                            },
                            "ticketPrice": null
                        },
                        "wayPoints": {
                            "type": "LineString",
                            "coordinates": [
                                [
                                    13.41134,
                                    52.52185
                                ],
                                [
                                    13.41018,
                                    52.52253
                                ],
                                [
                                    13.41007,
                                    52.52249
                                ],
                                [
                                    13.40999,
                                    52.52254
                                ],
                                [
                                    13.40983,
                                    52.52266
                                ],
                                [
                                    13.40973,
                                    52.52271
                                ],
                                [
                                    13.4097,
                                    52.52271
                                ],
                                [
                                    13.40957,
                                    52.52265
                                ],
                                [
                                    13.40884,
                                    52.52291
                                ]
                            ]
                        },
                        "guidingPoints": [
                            {
                                "description": "Head <b>northwest</b> on <b>Dircksenstraße</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.4113422,
                                            52.5218455
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 0
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 0
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Turn <b>left</b> toward <b>Dircksenstraße</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.4101836,
                                            52.5225302
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 109
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 18
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Slight <b>left</b> at <b>Karl-Liebknecht-Straße/B2/B5</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.4098325,
                                            52.5226607
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 143
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 50
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Turn <b>right</b> onto <b>Dircksenstraße</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.4095731,
                                            52.5226482
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 165
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 79
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Turn <b>right</b> onto <b>Rochstraße</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.4071934,
                                            52.5234134
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 348
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 117
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Continue onto <b>Max-Beer-Straße</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.407923,
                                            52.5245246
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 481
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 140
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Turn <b>left</b> onto <b>Linienstraße</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.409525,
                                            52.5282282
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 907
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 227
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Turn <b>right</b> onto <b>Kleine Hamburger Str.</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.394919,
                                            52.528035
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 1923
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 389
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Continue onto <b>Gartenstraße</b><div style=\"font-size:0.9em\">Go through 1 roundabout</div>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.3938246,
                                            52.5285362
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 2016
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 407
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Continue onto <b>Gerichtstraße</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.3781073,
                                            52.5418502
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 3889
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 887
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Turn <b>left</b> to stay on <b>Gerichtstraße</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.3680708,
                                            52.5449003
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 4677
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 1084
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Turn <b>right</b> onto <b>Müllerstraße</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.3619344,
                                            52.5449205
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 5097
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 1156
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Continue onto <b>Scharnweberstraße</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.3321398,
                                            52.5617735
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 7849
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 1771
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Turn <b>left</b> onto <b>Kurt-Schumacher-Damm</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.3278148,
                                            52.5641527
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 8244
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 1846
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Turn <b>right</b> onto <b>Str. 462</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.3268827,
                                            52.5632209
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 8365
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 1911
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Turn <b>left</b> onto <b>Nordlichtstraße</b>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.3250669,
                                            52.5630978
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 8490
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 1929
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Turn <b>right</b> onto <b>Meteorstraße</b><div style=\"font-size:0.9em\">Destination will be on the left</div>",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.3248337,
                                            52.5625748
                                        ]
                                    },
                                    "address": null,
                                    "time": null
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 8550
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 1940
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            },
                            {
                                "description": "Meteorstraße 40, 13405 Berlin, Germany",
                                "timedLocation": {
                                    "location": {
                                        "type": "Point",
                                        "coordinates": [
                                            13.3194514,
                                            52.5635387
                                        ]
                                    },
                                    "address": "Meteorstraße 40, 13405 Berlin, Germany",
                                    "time": "2013-07-23T13:43:26+00:00"
                                },
                                "cost": {
                                    "distance": {
                                        "unit": "meter",
                                        "value": 8929
                                    },
                                    "duration": {
                                        "unit": "second",
                                        "value": 2006
                                    },
                                    "price": null,
                                    "emission": null,
                                    "ticketPrice": null
                                },
                                "operator": null,
                                "pointId": null,
                                "comment": []
                            }
                        ]
                    }
                ]
            }

# Group Public Transport
This is a group of all public transportation related REST resources.

## List of Public Transport Stations with Basic Info [/imp-endpoint/api/V2/Resources/PublicTransport/Stations?lat={lat}&lng={lng}&radius={radius}&f_stations={f_stations}&filter={textFilter}] 

This collection contains a list of stations (U-Bahn/S-Bahn/train/bus/tram) in a specified area with basic information and a URI to get more details.
The area of interest can be defined as:

* an (optional) bounding circle (lat={lat}&lng={lng}&radius={radius})
* an (optional) bounding box (left_lower_lat={min_lat}&left_lower_lng={min_lng}&right_upper_lat={max_lat}&right_upper_lng={max_lng})

The optional filter `f_stations` can be used to get the stations with a particular `stationType`.

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time. Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the search area
--- | --- | ---
description | String | Approximate location
type | String | (="PublicTransportStation")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
stationType | String | BusTramStation, MetroStation, CityTrainStation
platforms | String | Platforms of the station
wheelChair | Boolean | Wheel chair accessibility
lines | Array of Objects | Array of lines departing at the station
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request.


+ Parameters
    + lat (number, `48.13`) ... latitude value. Has example value.
    + lng (number, `11.59`) ... longitude value. Has example value.
    + radius (number, `500`) ... radius in meter. Has example value.
    + f_stations (optional, string, `{"stationType":"BusTramStation"}`) ... String `f_stations` filter value. Has example value.
    + filter (optional, number, `BusTramStation`) ... textFilter value. Has example value.
+ Model (application/json)

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzStation",
                        "lastUpdateTime": "2015-01-07T07:14:23+00:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "osmBerlinStation",
                        "lastUpdateTime": "2015-01-07T07:10:41+00:00",
                        "messages": []
                    },
                    {
                        "serviceAlias": "osmMunichStation",
                        "lastUpdateTime": "2015-01-07T07:12:46+00:00",
                        "messages": []
                    }
                ],
                "resources": [
                    {
                        "actions": [],
                        "id": 10573,
                        "description": "Peter-Auzinger-StraÃe",
                        "type": "PublicTransportStation",
                        "uri": null,
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                11.58288,
                                48.098793
                            ]
                        },
                        "provider": "osmMunichStation",
                        "availability": 100,
                        "operator": null,
                        "stationType": "BusTramStation",
                        "platforms": null,
                        "wheelChair": null,
                        "lines": [
                            {
                                "name": "139",
                                "trafficType": "Bus"
                            },
                            {
                                "name": "220",
                                "trafficType": "Bus"
                            }
                        ]
                    },
                    {
                        "actions": [],
                        "id": 10634,
                        "description": "LincolnstraÃe",
                        "type": "PublicTransportStation",
                        "uri": null,
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                11.5904131,
                                48.094374
                            ]
                        },
                        "provider": "osmMunichStation",
                        "availability": 100,
                        "operator": null,
                        "stationType": "BusTramStation",
                        "platforms": null,
                        "wheelChair": null,
                        "lines": [
                            {
                                "name": "220",
                                "trafficType": "Bus"
                            },
                            {
                                "name": "220",
                                "trafficType": "Bus"
                            }
                        ]
                    }
                ]    
            }


### Getting all stations in a specific area [GET]
@testable

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT

+ Response 200

    [List of Public Transport Stations with Basic Info][]
    
    
## List of All Public Transport Stations with Basic Info [/imp-endpoint/api/V2/Resources/PublicTransport/Stations/All] 

This collection contains a list of stations (U-Bahn/S-Bahn/train/bus/tram).

The (optional) If-Modified-Since can be set to a specific date-time in order to request only resources modified after a particular date-time. Date-time is in HTTP date format, e.g. Wed, 09 Apr 2008 23:55:38 GMT.

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of resources within the business area
--- | --- | ---
description | String | Approximate location
type | String | (="PublicTransportStation")
uri | URI | URI to request more details
location | Object | Standard GeoJSON with 'Point' geometry type. { "type": "Point", "coordinates": ["longitude":Number, "latitude":Number] }
provider | String | Service provider
availability | Double | Availability in percentage
operator | String | Bus/tram (="VBBStation"), metro (="VBBStationU"), S-Bahn (="VBBStationS")
modFlag | Enum | Type of modification to resource [New / Modified / Relocated / Deleted]. This attribute is present only when the If-Modified-Since header is passed in the request. 

+ Model (application/json)

    + Body
    
            {
                "metaData": [
                    {
                      "serviceAlias": "vmzStation",
                      "lastUpdateTime": "2015-01-07T07:14:23+00:00",
                      "messages": [ ]
                    }
                ],
                "resources": [
                    {
                      "actions": [
                        
                      ],
                      "id": 4498,
                      "description": "HÃ¶now, Erikastr.",
                      "type": "PublicTransportStation",
                      "uri": "Resources/PublicTransport/Stations/PublicTransportStation/4498",
                      "location": {
                        "type": "Point",
                        "coordinates": [
                          13.627082,
                          52.530892
                        ]
                      },
                      "provider": "vmzStation",
                      "availability": 100.0,
                      "operator": "VBBStation",
                      "modFlag": "Modified"  
                    },
                    {
                      "actions": [
                        
                      ],
                      "id": 1306,
                      "description": "S+U Karl-Bonhoeffer-Nervenklinik (Berlin)",
                      "type": "PublicTransportStation",
                      "uri": "Resources/PublicTransport/Stations/PublicTransportStation/1306",
                      "location": {
                        "type": "Point",
                        "coordinates": [
                          13.332921,
                          52.578169
                        ]
                      },
                      "provider": "vmzStation",
                      "availability": 100.0,
                      "operator": "VBBStation",
                      "modFlag": "Modified"
                    }
                ]    
            }


### Getting all stations [GET]
@testable

+ Request

    + Headers
        
            If-Modified-Since: Wed, 09 Apr 2008 23:55:38 GMT

+ Response 200

    [List of All Public Transport Stations with Basic Info][]
    

## Time Table of a specific Station [/imp-endpoint/api/V2/Resources/PublicTransport/Stations/{id}/TimeTables]

Arrival and departure times of a specified station. 
The data structure contains the station details as described above and in addition the following attributes:

attribute | json data type | comments
--- | --- | ---
metadata | Object | List of service providers and the last update times and failures if any [{serviceAlias:"XXX",lastUpdateTime:dd-mm-yyyyThhmmssZ,messages:[]}]
--- | --- | ---
resources | Array | Array of arrivals/departures
--- | --- | ---
id | Number | Internal public transport station identification number
... | ... | ...
arrivals | Array of Objects | Arrivals info containing direction, line and arrival times
departures | Array of Objects | Departures info containing direction, line and departure times

Please note, the expectedTime is not always available.

### Getting a time table [GET] 
@nottestable

+ Parameters
    + id (string, `2532`) ... String `id` as retrieved through *[/imp-endpoint/api/V2/Resources/PublicTransport/Stations?lat={lat}&lng={lng}&radius={radius}]* or similar.

        
+ Response 200 (application/json)

    + Body
    
            {
                "metaData": [
                    {
                        "serviceAlias": "vmzStation",
                        "lastUpdateTime": null,
                        "messages": []
                    }
                ],
                "resources": [
                    {
                        "actions": [],
                        "id": 2532,
                        "description": "Berlin, Alexandrinenstr.",
                        "type": "PublicTransportStation",
                        "uri": "Resources/PublicTransport/Stations/2532/TimeTables/2532",
                        "location": {
                            "type": "Point",
                            "coordinates": [
                                13.405322,
                                52.505154
                            ]
                        },
                        "provider": "vmzStation",
                        "availability": 100,
                        "operator": "VBBStation",
                        "stationType": "BusTramStation",
                        "platforms": null,
                        "wheelChair": null,
                        "lines": null,
                        "arrivals": [],
                        "departures": [
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T18:46:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "Grunewald, Roseneck",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T18:49:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T18:51:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Wittenbergplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T18:54:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T18:56:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "Grunewald, Roseneck",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T18:59:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:01:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Wittenbergplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:04:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:06:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "Grunewald, Roseneck",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:09:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:11:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Wittenbergplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:14:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:16:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "Grunewald, Roseneck",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:19:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:21:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Wittenbergplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:24:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:26:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "Grunewald, Roseneck",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:29:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:31:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Wittenbergplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:34:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:35:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "Grunewald, Roseneck",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:39:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Hermannplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:41:00+02:00",
                                "expectedTime": null
                            },
                            {
                                "direction": "U Wittenbergplatz",
                                "line": "Bus M29",
                                "aimedTime": "2014-07-14T19:44:00+02:00",
                                "expectedTime": null
                            }
                        ]
                    }
                ]
            }

# Group Dummy. Please do not delete.
